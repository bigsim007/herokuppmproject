{"version":3,"sources":["components/Project/CreateProjectButton.js","actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/backlogReducer.js","reducers/errorReducer.js","reducers/projectsReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTask/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTask/AddProjectTask.js","components/ProjectBoard/ProjectTask/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","reportWebVitals.js","index.js"],"names":["CreateProjectButton","Fragment","to","className","GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectIdentifier","projectName","description","onClick","bind","Component","connect","window","confirm","delete","Dashboard","getProjects","projects","map","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_props","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlogorithm","AddProjectTask","dueDate","newProjectTask","createProjectTask","projectTask","UpdateProjectTask","created_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","console","log","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6e481cd.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n    return (\r\n\r\n        <React.Fragment>\r\n       <Link to=\"addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n       </Link>\r\n       </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default CreateProjectButton;","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//types for Backlog actions\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import axios from \"axios\";\r\nimport { DELETE_PROJECT, GET_ERRORS, GET_PROJECT, GET_PROJECTS } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/project\", project);\r\n        history.push(\"/dashboard\");\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload:{}\r\n        });   \r\n    } catch (err) {\r\n       dispatch({\r\n            type:GET_ERRORS,\r\n            payload:err.response.data\r\n       });\r\n    }\r\n};\r\n\r\nexport const getProjects = () => async dispatch =>{\r\n    const res = await axios.get(\"/api/project/all\");\r\n    dispatch({\r\n        type: GET_PROJECTS,\r\n        payload: res.data\r\n    });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch =>{\r\n\r\n    try {\r\n        const res = await axios.get(`/api/project/${id}`);\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        });\r\n    } catch (error) {\r\n        history.push(\"/dashboard\");\r\n    }    \r\n};\r\n\r\nexport const deleteProject = id => async dispatch =>{\r\n    if(\r\n        window.confirm(\r\n            \"Are you sure? This will delete the project and all data related to it\"\r\n    )){\r\n        await axios.delete(`/api/project/${id}`);\r\n        dispatch({\r\n            type: DELETE_PROJECT,\r\n            payload: id\r\n        });\r\n    }\r\n   \r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {deleteProject} from \"../../actions/projectActions\";\r\n\r\n\r\nclass ProjectItem extends Component {\r\n\r\n    onDeleteClick = id =>{\r\n      this.props.deleteProject(id);\r\n    };\r\n\r\n    render() {\r\n\r\n      const {project} = this.props;\r\n        return( \r\n          <div className=\"container\">\r\n          <div className=\"card card-body bg-light mb-3\">\r\n            <div className=\"row\">\r\n              <div className=\"col-2\">\r\n                <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n              </div>\r\n              <div className=\"col-lg-6 col-md-4 col-8\">\r\n                <h3>{project.projectName}</h3>\r\n                <p>{project.description}</p>\r\n              </div>\r\n              <div className=\"col-md-4 d-none d-lg-block\">\r\n                <ul className=\"list-group\">\r\n                  <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                    <li className=\"list-group-item board\">\r\n                      <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                    </li>\r\n                  </Link>\r\n                  <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                    <li className=\"list-group-item update\">\r\n                      <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                    </li>\r\n                  </Link>\r\n                  \r\n                    <li className=\"list-group-item delete\" \r\n                      onClick={this.onDeleteClick.bind(this, project.projectIdentifier)}>\r\n                      <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                    </li>\r\n                  \r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n            );\r\n    }\r\n}\r\n\r\nProjectItem.propTypes={\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null, \r\n  {deleteProject}\r\n  )(ProjectItem);\r\n","import React, { Component } from 'react';\r\nimport CreateProjectButton from './Project/CreateProjectButton';\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport ProjectItem from './Project/ProjectItem';\r\n\r\nclass Dashboard extends Component {\r\n    componentDidMount() {\r\n        this.props.getProjects();\r\n    }\r\n\r\n    render() {\r\n        const {projects} = this.props.project;\r\n\r\n        return (\r\n       <div className=\"projects\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <h1 className=\"display-4 text-center\">Projects</h1>\r\n                    <br />\r\n                        <CreateProjectButton />\r\n\r\n                    <br />\r\n                    <hr />\r\n                    {projects.map(project => (\r\n                        <ProjectItem key={project.id} project={project} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n      );\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    project: PropTypes.object.isRequired,\r\n    getProjects: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateProps = state => ({\r\n    project: state.project\r\n});\r\n\r\nexport default connect(\r\n    mapStateProps, \r\n    {getProjects}\r\n    )(Dashboard);","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;","import { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";  \r\nimport axios from \"axios\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n    try {\r\n      await axios.post(\"/api/users/register\", newUser);\r\n      history.push(\"/login\");\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {}\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    }\r\n  };\r\n  \r\n  export const login = LoginRequest => async dispatch => {\r\n    try {\r\n      // post => Login Request\r\n      const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n      // extract token from res.data\r\n      const { token } = res.data;\r\n      // store the token in the localStorage\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // set our token in header ***\r\n      setJWTToken(token);\r\n      // decode token on React\r\n      const decoded = jwt_decode(token);\r\n      // dispatch to our securityReducer\r\n      dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    }\r\n  };\r\n  \r\n  export const logout = () => dispatch => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    setJWTToken(false);\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: {}\r\n    });\r\n  };","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n    render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Header);","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from 'react-redux';\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n    \r\n        this.state = {\r\n          projectName: \"\",\r\n          projectIdentifier: \"\",\r\n          description: \"\",\r\n          start_date: \"\",\r\n          end_date: \"\",\r\n          errors:{}\r\n        };\r\n    \r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n      }\r\n\r\n      componentWillReceiveProps(nextProps) {\r\n        if(nextProps.errors){\r\n          this.setState({ errors: nextProps.errors });\r\n        }\r\n      }\r\n    \r\n      onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n      }\r\n    \r\n      onSubmit(e) {\r\n        e.preventDefault();\r\n        const newProject = {\r\n          projectName: this.state.projectName,\r\n          projectIdentifier: this.state.projectIdentifier,\r\n          description: this.state.description,\r\n          start_date: this.state.start_date,\r\n          end_date: this.state.end_date\r\n        };\r\n    \r\n        this.props.createProject(newProject, this.props.history);\r\n      }\r\n\r\n    render() {\r\n      const { errors } = this.state;\r\n\r\n        return (\r\n            <div>  \r\n            <div className=\"project\">\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-8 m-auto\">\r\n                    <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                    <hr />\r\n                    <form onSubmit={this.onSubmit}>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className={classnames(\"form-control form-control-lg \", {\r\n                            \"is-invalid\":errors.projectName\r\n                          })}\r\n                          placeholder=\"Project Name\"\r\n                          name=\"projectName\"\r\n                          value={this.state.projectName}\r\n                          onChange={this.onChange}\r\n                        />\r\n                        {errors.projectName && (\r\n                          <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className={classnames(\"form-control form-control-lg\", {\r\n                            \"is-invalid\":errors.projectIdentifier\r\n                          })}\r\n                          placeholder=\"Unique Project ID\"\r\n                          name=\"projectIdentifier\"\r\n                          value={this.state.projectIdentifier}\r\n                          onChange={this.onChange}\r\n                        />\r\n                        {errors.projectIdentifier && (\r\n                          <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <textarea\r\n                          className={classnames(\"form-control form-control-lg\", {\r\n                            \"is-invalid\":errors.description\r\n                          })}\r\n                          placeholder=\"Project Description\"\r\n                          name=\"description\"\r\n                          value={this.state.description}\r\n                          onChange={this.onChange}\r\n                        />\r\n                        {errors.description && (\r\n                          <div className=\"invalid-feedback\">{errors.description}</div>\r\n                        )}\r\n                      </div>\r\n                      <h6>Start Date</h6>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"date\"\r\n                          className=\"form-control form-control-lg\"\r\n                          name=\"start_date\"\r\n                          value={this.state.start_date}\r\n                          onChange={this.onChange}\r\n                        />\r\n                      </div>\r\n                      <h6>Estimated End Date</h6>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"date\"\r\n                          className=\"form-control form-control-lg\"\r\n                          name=\"end_date\"\r\n                          value={this.state.end_date}\r\n                          onChange={this.onChange}\r\n                        />\r\n                      </div>\r\n    \r\n                      <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary btn-block mt-4\"\r\n                      />\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddProject.propTypes = {\r\n    createProject: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n    { createProject }\r\n    ) (AddProject);\r\n","import {GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK} from \"../actions/types\";\r\n\r\nconst initialState ={\r\n    project_tasks: [],\r\n    project_task: {}\r\n}\r\n\r\nexport default function(state=initialState, action){\r\n    switch(action.type){\r\n\r\n        case GET_BACKLOG:\r\n            return{\r\n                ...state,\r\n                project_tasks: action.payload\r\n            };\r\n\r\n        case GET_PROJECT_TASK:\r\n            return{\r\n                ...state,\r\n                project_task: action.payload\r\n            };\r\n\r\n        case DELETE_PROJECT_TASK:\r\n            return{\r\n                ...state,\r\n                project_tasks: state.project_tasks.filter(\r\n                    project_task => project_task.projectSequence !== action.payload\r\n                    )\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {GET_ERRORS} from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state=initialState, action){\r\n    switch(action.type){\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import { DELETE_PROJECT, GET_PROJECT, GET_PROJECTS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    project: {}\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_PROJECTS:\r\n            return{\r\n                ...state,\r\n                projects: action.payload\r\n            };\r\n\r\n        case GET_PROJECT:\r\n            return{\r\n                ...state,\r\n                project: action.payload\r\n            };\r\n\r\n        case DELETE_PROJECT:\r\n            return{\r\n                ...state,\r\n                projects: state.projects.filter(\r\n                    project=>project.projectIdentifier !== action.payload\r\n                )\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {}\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectsReducer from \"./projectsReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n    errors: errorReducer,\r\n    project: projectsReducer,\r\n    backlog: backlogReducer,\r\n    security: securityReducer\r\n});","import {createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && \r\nwindow.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && \r\n    !window.navigator.userAgent.includes(\"Edg\") && ReactReduxDevTools) {\r\n    store = createStore(\r\n        rootReducer, \r\n        initalState, \r\n        compose\r\n        (\r\n            applyMiddleware(...middleware),\r\n            ReactReduxDevTools\r\n        )\r\n    );\r\n\r\n}else{\r\n\r\n    store = createStore(\r\n        rootReducer, \r\n        initalState, \r\n        compose\r\n        (\r\n            applyMiddleware(...middleware)\r\n        )\r\n    );\r\n}\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport {getProject, createProject} from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors:{}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n     componentWillReceiveProps(nextProps){\r\n\r\n        if(nextProps.errors){\r\n            this.setState({ errors: nextProps.errors });\r\n        }\r\n\r\n        const{\r\n            id,\r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            start_date,\r\n            end_date\r\n        } = nextProps.project;\r\n\r\n        this.setState({\r\n            id,\r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            start_date,\r\n            end_date\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        this.props.getProject(id, this.props.history);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const updateProject = {\r\n            id: this.state.id,\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            start_date: this.state.start_date,\r\n            end_date: this.state.end_date\r\n        };\r\n\r\n        this.props.createProject(updateProject, this.props.history);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div className=\"project\">\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                    <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n                    <hr />\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className={classnames(\"form-control form-control-lg \", {\r\n                                \"is-invalid\":errors.projectName\r\n                              })}\r\n                            placeholder=\"Project Name\"\r\n                            name=\"projectName\"\r\n                            value={this.state.projectName}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        {errors.projectName && (\r\n                            <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control form-control-lg\"\r\n                            placeholder=\"Unique Project ID\"\r\n                            name=\"projectIdentifier\"\r\n                            value={this.state.projectIdentifier}\r\n                            onChange={this.onChange}\r\n                            disabled\r\n                        />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        <textarea\r\n                            className={classnames(\"form-control form-control-lg\", {\r\n                            \"is-invalid\":errors.description\r\n                            })}\r\n                            placeholder=\"Project Description\"\r\n                            name=\"description\"\r\n                            value={this.state.description}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        {errors.description && (\r\n                            <div className=\"invalid-feedback\">{errors.description}</div>\r\n                          )}\r\n                        </div>\r\n                        <h6>Start Date</h6>\r\n                        <div className=\"form-group\">\r\n                        <input\r\n                            type=\"date\"\r\n                            className=\"form-control form-control-lg\"\r\n                            name=\"start_date\"\r\n                            value={this.state.start_date}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        </div>\r\n                        <h6>Estimated End Date</h6>\r\n                        <div className=\"form-group\">\r\n                        <input\r\n                            type=\"date\"\r\n                            className=\"form-control form-control-lg\"\r\n                            name=\"end_date\"\r\n                            value={this.state.end_date}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        </div>\r\n\r\n                        <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary btn-block mt-4\"\r\n                        />\r\n                    </form>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n    getProject: PropTypes.func.isRequired,\r\n    createProject: PropTypes.func.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project.project,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    {getProject, createProject}\r\n    )(UpdateProject);\r\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n    onDeleteClick(backlog_id, pt_id) {\r\n      this.props.deleteProjectTask(backlog_id, pt_id);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {project_task} = this.props;\r\n        let priorityString;\r\n        let priorityClass;\r\n\r\n        if(project_task.priority === 1){\r\n          priorityClass = \"bg-danger text-light\";\r\n          priorityString = \"HIGH\";\r\n        }\r\n\r\n        if(project_task.priority === 2){\r\n          priorityClass = \"bg-warning text-light\";\r\n          priorityString = \"MEDIUM\";\r\n        }\r\n\r\n        if(project_task.priority === 3){\r\n          priorityClass = \"bg-info text-light\";\r\n          priorityString = \"LOW\";\r\n        }\r\n\r\n        return (\r\n            <div className=\"card mb-1 bg-light\">\r\n            <div className={`card-header text-primary ${priorityClass}`}>\r\n              ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n            </div>\r\n            <div className=\"card-body bg-light\">\r\n              <h5 className=\"card-title\">{project_task.summary}</h5>\r\n              <p className=\"card-text text-truncate \">\r\n              {project_task.acceptanceCriteria}\r\n              </p>\r\n              <Link\r\n              to={`/updateProjectTask/${project_task.projectIdentifier}/${\r\n                project_task.projectSequence\r\n              }`}\r\n              className=\"btn btn-primary\"\r\n              >\r\n                View / Update\r\n              </Link>\r\n    \r\n              <button className=\"btn btn-danger ml-4\"\r\n              onClick={this.onDeleteClick.bind(\r\n                this,\r\n                project_task.projectIdentifier,\r\n                project_task.projectSequence\r\n              )}\r\n              >Delete</button>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\nexport default connect(\r\n  null,\r\n  { deleteProjectTask }\r\n)(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK, GET_ERRORS} from \"./types\"\r\n\r\nexport const getBacklog = backlog_id => async dispatch =>{\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_BACKLOG,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:err.response.data\r\n       });\r\n    }\r\n};\r\n\r\nexport const createProjectTask = (projectTask, backlog_id, history) => async dispatch => {\r\n    try {\r\n        await axios.post(`/api/backlog/${backlog_id}`, projectTask);\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload:{}\r\n        });   \r\n    } catch (err) {\r\n       dispatch({\r\n            type:GET_ERRORS,\r\n            payload:err.response.data\r\n       });\r\n    }\r\n};\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch =>{\r\n\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n        dispatch({\r\n            type: GET_PROJECT_TASK,\r\n            payload: res.data\r\n        });\r\n    } catch (error) {\r\n        history.push(\"/dasboard\");\r\n    }    \r\n};\r\n\r\nexport const updateProjectTask = (\r\n    backlog_id,\r\n    pt_id,\r\n    project_task,\r\n    history\r\n  ) => async dispatch => {\r\n    try {\r\n      await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n      history.push(`/projectBoard/${backlog_id}`);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {}\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch =>{\r\n    if(\r\n        window.confirm(\r\n            `You are deleting project task ${pt_id}, this action cannot be undone`\r\n    )){\r\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n        dispatch({\r\n            type: DELETE_PROJECT_TASK,\r\n            payload: pt_id\r\n        });\r\n    }   \r\n};\r\n","import React, { Component } from 'react';\r\nimport ProjectTask from './ProjectTask/ProjectTask';\r\n\r\nclass Backlog extends Component {\r\n    render() {\r\n        const{project_tasks_props} = this.props;\r\n        const tasks = project_tasks_props.map(project_task =>(\r\n            <ProjectTask key={project_task.id} project_task={project_task} />\r\n        ));\r\n\r\n        let todoItems = [];\r\n        let inProgressItems = [];\r\n        let doneItems = [];\r\n\r\n        for(let i=0; i<tasks.length; i++){\r\n          if( tasks[i].props.project_task.status === \"TO_DO\") {\r\n            todoItems.push(tasks[i]);\r\n          }\r\n          if( tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n            inProgressItems.push(tasks[i]);\r\n          }\r\n          if( tasks[i].props.project_task.status === \"DONE\") {\r\n            doneItems.push(tasks[i]);\r\n          }\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-center mb-2\">\r\n                  <div className=\"card-header bg-secondary text-white\">\r\n                    <h3>TO DO</h3>\r\n                  </div>\r\n                </div>\r\n                {todoItems}\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-center mb-2\">\r\n                  <div className=\"card-header bg-primary text-white\">\r\n                    <h3>In Progress</h3>\r\n                  </div>\r\n                </div>\r\n                {inProgressItems}\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-center mb-2\">\r\n                  <div className=\"card-header bg-success text-white\">\r\n                    <h3>Done</h3>\r\n                  </div>\r\n                </div>\r\n                {doneItems}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\nexport default Backlog;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport PropTypes from \"prop-types\";\r\nimport {getBacklog} from \"../../actions/backlogActions\";\r\nimport { connect } from 'react-redux';\r\n\r\nclass ProjectBoard extends Component {\r\n\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps.errors){\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n    render() {\r\n        const { id } = this.props.match.params;\r\n        const {project_tasks} = this.props.backlog;\r\n        const {errors} = this.state;\r\n\r\n        let BoardContent;\r\n\r\n        const boardAlogorithm = (errors, project_tasks) =>{\r\n          if(project_tasks.length < 1){\r\n            if(errors.projectNotFound){\r\n              return(\r\n                <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                {errors.projectNotFound}\r\n                </div>\r\n              );\r\n            } else if (errors.projectIdentifier) {\r\n              return (\r\n                <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                  {errors.projectIdentifier}\r\n                </div>\r\n              );\r\n            }else{\r\n              return (<div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Task on this board\r\n              </div>);\r\n            }\r\n          }         else{\r\n              return <Backlog project_tasks_props={project_tasks}/>;\r\n          }\r\n        };\r\n\r\n        BoardContent = boardAlogorithm(errors, project_tasks);\r\n\r\n        return (\r\n          <div className=\"container\">\r\n            <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n              <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n            </Link>\r\n            <br />\r\n            <hr />\r\n            {BoardContent}\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nProjectBoard.propTypes ={\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {getBacklog}\r\n  )(ProjectBoard);\r\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { createProjectTask } from \"../../../actions/backlogActions\"\nimport { connect } from \"react-redux\";\n\nclass AddProjectTask extends Component {\n\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors:{}\n    }    \n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.errors){\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProjectTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n\n    this.props.createProjectTask(newProjectTask, this.state.projectIdentifier, this.props.history);\n  }\n    render() {\n      const { id } = this.props.match.params;\n      const { errors } = this.state;\n  \n      return (\n        <div className=\"add-PBI\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                  Back to Project Board\n                </Link>\n                <h4 className=\"display-4 text-center\">Add Project Task</h4>\n                <p className=\"lead text-center\">Project Name + Project Code</p>\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg \", {\n                        \"is-invalid\":errors.summary\n                      })}\n                      name=\"summary\"\n                      placeholder=\"Project Task summary\"\n                      value={this.state.summary}\n                      onChange={this.onChange}                      \n                    />\n                    {errors.summary && (\n                      <div className=\"invalid-feedback\">{errors.summary}</div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className=\"form-control form-control-lg\"\n                      placeholder=\"Acceptance Criteria\"\n                      name=\"acceptanceCriteria\"\n                      value={this.state.acceptanceCriteria}\n                      onChange={this.onChange}   \n                    />\n                  </div>\n                  <h6>Due Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"dueDate\"\n                      value={this.state.dueDate}\n                      onChange={this.onChange}   \n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <select\n                      className=\"form-control form-control-lg\"\n                      name=\"priority\"\n                      value={this.state.priority}\n                      onChange={this.onChange}\n                    >\n                      <option value={0}>Select Priority</option>\n                      <option value={1}>High</option>\n                      <option value={2}>Medium</option>\n                      <option value={3}>Low</option>\n                    </select>                    \n                  </div>\n  \n                  <div className=\"form-group\">\n                    <select\n                      className=\"form-control form-control-lg\"\n                      name=\"status\"\n                      value={this.state.status}\n                      onChange={this.onChange}\n                    >\n                      <option value=\"\">Select Status</option>\n                      <option value=\"TO_DO\">TO DO</option>\n                      <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                      <option value=\"DONE\">DONE</option>\n                    </select> \n                  </div>\n  \n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  AddProjectTask.propTypes = {\n    createProjectTask: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n  \n  export default connect(\n    mapStateToProps,\n    {createProjectTask}\n  )(AddProjectTask);\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport { updateProjectTask, getProjectTask} from \"../../../actions/backlogActions\"\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            projectSequence:\"\",\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: \"\",\r\n            dueDate: \"\",\r\n            created_At:\"\",\r\n            projectIdentifier:\"\",\r\n            errors:{}\r\n          }\r\n\r\n          this.onChange = this.onChange.bind(this);\r\n          this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n\r\n        if(nextProps.errors){\r\n            this.setState({ errors: nextProps.errors });\r\n        }\r\n\r\n        const{\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            created_At,\r\n            projectIdentifier\r\n        } = nextProps.project_task;\r\n\r\n        this.setState({\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            created_At,\r\n            projectIdentifier\r\n        });\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {backlog_id, pt_id} = this.props.match.params;\r\n        this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const updateProjectTask = {\r\n            id: this.state.id,\r\n            projectSequence: this.state.projectSequence,\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate,\r\n            created_At:this.state.created_At,\r\n            projectIdentifier: this.state.projectIdentifier\r\n        }\r\n\r\n        this.props.updateProjectTask(\r\n            this.state.projectIdentifier, \r\n            this.state.projectSequence,\r\n            updateProjectTask,\r\n            this.props.history\r\n            )\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <a href=\"#\" className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </a>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name: {this.state.projectIdentifier} |\r\n               Project Task ID: {this.state.projectSequence}</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\":errors.summary\r\n                      })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}  \r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}  \r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n    getProjectTask: PropTypes.func.isRequired,\r\n    updateProjectTask: PropTypes.func.isRequired,\r\n    project_task: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    project_task: state.backlog.project_task,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getProjectTask, updateProjectTask }\r\n    )(UpdateProjectTask);\r\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n    componentDidMount() {\r\n        if (this.props.security.validToken) {\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n      }\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n            <div className=\"light-overlay landing-inner text-dark\">\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12 text-center\">\r\n                    <h1 className=\"display-3 mb-4\">\r\n                      Personal Project Management Tool\r\n                    </h1>\r\n                    <p className=\"lead\">\r\n                      Create your account to join active projects or start your own\r\n                    </p>\r\n                    <hr />\r\n                    <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                      Sign Up\r\n                    </Link>\r\n                    <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                      Login\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nLanding.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n  };\r\n  \r\n  const mapStateToProps = state => ({\r\n    security: state.security\r\n  });\r\n  \r\n  export default connect(mapStateToProps)(Landing);","import React, { Component } from 'react';\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n    \r\n        this.state = {\r\n          username: \"\",\r\n          fullName: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n          errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n      }\r\n    \r\n      componentDidMount() {\r\n        if (this.props.security.validToken) {\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n      }\r\n    \r\n      componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n          this.setState({ errors: nextProps.errors });\r\n        }\r\n      }\r\n    \r\n      onSubmit(e) {\r\n        e.preventDefault();\r\n        const newUser = {\r\n          username: this.state.username,\r\n          fullName: this.state.fullName,\r\n          password: this.state.password,\r\n          confirmPassword: this.state.confirmPassword\r\n        };\r\n    \r\n        this.props.createNewUser(newUser, this.props.history);\r\n      }\r\n    \r\n      onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n      }\r\n    \r\n      render() {\r\n        const { errors } = this.state;\r\n        return (\r\n          <div className=\"register\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                  <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                  <p className=\"lead text-center\">Create your Account</p>\r\n                  <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control form-control-lg\", {\r\n                          \"is-invalid\": errors.fullName\r\n                        })}\r\n                        placeholder=\"Full Name\"\r\n                        name=\"fullName\"\r\n                        value={this.state.fullName}\r\n                        onChange={this.onChange}\r\n                      />\r\n                      {errors.fullName && (\r\n                        <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control form-control-lg\", {\r\n                          \"is-invalid\": errors.username\r\n                        })}\r\n                        placeholder=\"Email Address (Username)\"\r\n                        name=\"username\"\r\n                        value={this.state.username}\r\n                        onChange={this.onChange}\r\n                      />\r\n                      {errors.username && (\r\n                        <div className=\"invalid-feedback\">{errors.username}</div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"password\"\r\n                        className={classnames(\"form-control form-control-lg\", {\r\n                          \"is-invalid\": errors.password\r\n                        })}\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChange}\r\n                      />\r\n                      {errors.password && (\r\n                        <div className=\"invalid-feedback\">{errors.password}</div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"password\"\r\n                        className={classnames(\"form-control form-control-lg\", {\r\n                          \"is-invalid\": errors.confirmPassword\r\n                        })}\r\n                        placeholder=\"Confirm Password\"\r\n                        name=\"confirmPassword\"\r\n                        value={this.state.confirmPassword}\r\n                        onChange={this.onChange}\r\n                      />\r\n                      {errors.confirmPassword && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.confirmPassword}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    \r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n    \r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\n    \r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser }\r\n)(Register);","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        }\r\n\r\n    componentDidMount() {\r\n        if (this.props.security.validToken) {\r\n          console.log(this.props);\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.security.validToken) {\r\n          console.log(this.props);\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n    \r\n        if (nextProps.errors) {\r\n          this.setState({ errors: nextProps.errors });\r\n        }\r\n      }\r\n    \r\n      onSubmit(e) {\r\n        e.preventDefault();\r\n        const LoginRequest = {\r\n          username: this.state.username,\r\n          password: this.state.password\r\n        };\r\n    \r\n        this.props.login(LoginRequest);\r\n      }\r\n    \r\n      onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n      }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n          <div className=\"login\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                  <h1 className=\"display-4 text-center\">Log In</h1>\r\n                  <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control form-control-lg\", {\r\n                          \"is-invalid\": errors.username\r\n                        })}\r\n                        placeholder=\"Email Address\"\r\n                        name=\"username\"\r\n                        value={this.state.username}\r\n                        onChange={this.onChange}\r\n                      />\r\n                      {errors.username && (\r\n                        <div className=\"invalid-feedback\">{errors.username}</div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"password\"\r\n                        className={classnames(\"form-control form-control-lg\", {\r\n                          \"is-invalid\": errors.password\r\n                        })}\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChange}\r\n                      />\r\n                      {errors.password && (\r\n                        <div className=\"invalid-feedback\">{errors.password}</div>\r\n                      )}\r\n                    </div>\r\n                    <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n  };\r\n  \r\n  const mapStateToProps = state => ({\r\n    security: state.security,\r\n    errors: state.errors\r\n  });\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { login }\r\n  )(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);","import React, { Component } from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from './components/Project/AddProject';\nimport {Provider} from \"react-redux\";\nimport store from './store';\nimport UpdateProject from './components/Project/UpdateProject';\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\nimport AddProjectTask from './components/ProjectBoard/ProjectTask/AddProjectTask';\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTask/UpdateProjectTask\";\nimport Landing from './components/Layout/Landing';\nimport Register from './components/UserManagement/Register';\nimport Login from './components/UserManagement/Login';\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          {\n            //Public Routes\n          }\n          <div className=\"content\">\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n\n          {\n            //Private Routes\n          }\n          <Switch>\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />                \n            <SecuredRoute exact path=\"/updateProject/:id\" component={UpdateProject} /> \n            <SecuredRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n            <SecuredRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\n            <SecuredRoute exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask} />\n          </Switch>\n          </div>\n          </div>\n      </Router>\n    </Provider>\n  );\n}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}